name: Reusable RHEL Binary Build
# Reusable action to simplify dealing with RHEL binary builds
# author: Christoph Froehlich <christoph.froehlich@ait.ac.at>

on:
  workflow_call:
    inputs:
      ros_distro:
        description: 'ROS2 distribution name'
        required: true
        type: string
      ref_for_scheduled_build:
        description: 'Reference on which the repo should be checkout for scheduled build. Usually is this name of a branch or a tag.'
        default: ''
        required: false
        type: string
      upstream_workspace:
        description: 'Path to local .repos file.'
        default: ''
        required: false
        type: string
      skip_packages:
        description: 'Packages to skip from build and test'
        default: ''
        required: false
        type: string

jobs:
  rhel_binary:
    name: ${{ inputs.ros_distro }} RHEL binary build
    runs-on: ubuntu-latest
    env:
      path: src/ros2_controllers
    container: ghcr.io/ros-controls/ros:${{ inputs.ros_distro }}-rhel
    steps:
      - name: Checkout default ref when build is not scheduled
        if: ${{ github.event_name != 'schedule' }}
        uses: actions/checkout@v4
        with:
          path: ${{ env.path }}
      - name: Checkout ${{ inputs.ref_for_scheduled_build }} on scheduled build
        if: ${{ github.event_name == 'schedule' }}
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.ref_for_scheduled_build }}
          path: ${{ env.path }}
      - name: Install dependencies
        run: |
          source /opt/ros/${{ inputs.ros_distro }}/setup.bash
          source /opt/ros2_ws/install/local_setup.bash
          if [[ -n "${{ inputs.upstream_workspace }}" ]]; then
            vcs import src < ${{ env.path }}/${{ inputs.upstream_workspace }}
          fi
          rosdep update
          rosdep install -iyr --from-path src || true
      - name: Build workspace
        # source also underlay workspace with generate_parameter_library on rhel9
        run: |
          source /opt/ros/${{ inputs.ros_distro }}/setup.bash
          source /opt/ros2_ws/install/local_setup.bash
          colcon build  --packages-up-to $(colcon list --paths ${{ env.path }}/* --names-only) --packages-skip ${{ inputs.skip_packages }}
      - name: Test workspace
        shell: bash
        continue-on-error: true
        run: |
          source /opt/ros/${{ inputs.ros_distro }}/setup.bash
          source /opt/ros2_ws/install/local_setup.bash
          colcon test --packages-select $(colcon list --paths ${{ env.path }}/* --names-only) --packages-skip  ${{ inputs.skip_packages }}
          colcon test-result --verbose
